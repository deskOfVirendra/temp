# -*- coding: utf-8 -*-
"""ml3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_mjW9NKVCwY4cf9P1QSRRmqepwmR9Xq1
"""

import math
import operator

def euclideanDistance(instance1,instance2,length):
    distance = 0.0
    for i in range(length):
        distance += pow((float(instance1[i]) - float(instance2[i])), 2)
    return math.sqrt(distance)

def getNeighbours(trainingSet,testInstance,K):
    distances = []
    length = len(trainingSet[0])-1
    for x in range(len(trainingSet)):
        dist = euclideanDistance(trainingSet[x],testInstance,length)
        distances.append((trainingSet[x],dist))
    distances.sort(key=operator.itemgetter(1))
    neighbors = []
    for x in range(K):
        neighbors.append(distances[x][0])
    return neighbors

def getAnswer(neighbours):
    classVotes = {}
    for x in range(len(neighbours)):
        response = neighbours[x][-1]
        if response in classVotes:
            classVotes[response] += 1
        else:
            classVotes[response] = 1
    sortedVotes = sorted(classVotes.items(), key=operator.itemgetter(1), reverse=True)
    return sortedVotes[0][0]

if __name__ == "__main__":
    dataSet = [[2, 4, "Orange"], [4, 4, "Blue"], [4, 6, "Orange"], [4, 2, "Orange"], [6, 2, "Blue"], [6, 4, "Orange"], [8, 2, "Blue"]]
    testSet = [[6, 6], [8, 4]]

    for item in testSet:
        print("Data point : ", item)
        neighbours = getNeighbours(dataSet,item,3)
        print("Nearest Neighbours : ", neighbours)
        answer = getAnswer(neighbours)
        print("Prediction : ", answer, "\n")